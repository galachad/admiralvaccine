[{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2021 F. Hoffmann-La Roche AG and GlaxoSmithKline LLC  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/articles/adface.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating ADFACE","text":"article describes creating ADFACE ADaM common vaccine endpoint parameters based CBER guidelines. Examples currently presented tested using ADSL (ADaM) face, vs (SDTM) inputs. However, domains used. Note: examples assume CDISC SDTM /ADaM format input unless otherwise specified.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/articles/adface.html","id":"programming-workflow","dir":"Articles","previous_headings":"","what":"Programming Workflow","title":"Creating ADFACE","text":"Read Data Derive fever records VS domain Derive AVAL,AVALC Derive severity records Redness swelling Derive maximum severity records Derive maximum diameter records Derive maximum temperature records Assign PARAMCD, PARAM, PARAMN, PARCAT1 Derive maximum severity flag Derive event occurrence flag Add ADSL variables","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/articles/adxx.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating ADXX","text":"article describes creating ADXX ADaM.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Open Source. Author, maintainer.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Source O (2023). admiralvaccine: ADaM R Asset Library - Extension. https://pharmaverse.github.io/admiraltemplate, https://github.com/pharmaverse/admiraltemplate.","code":"@Manual{,   title = {admiralvaccine: ADaM in R Asset Library - Extension},   author = {Open Source},   year = {2023},   note = {https://pharmaverse.github.io/admiraltemplate, https://github.com/pharmaverse/admiraltemplate}, }"},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"release-schedule","dir":"","previous_headings":"","what":"Release Schedule","title":"ADaM in R Asset Library - Extension","text":"admiralvaccine initial release tentatively targeted end sem1 2023. Vaccine extension package ADaM R Asset Library admiral","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"ADaM in R Asset Library - Extension","text":"provide complementary (admiral) toolbox enables users develop vaccine specific domains.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ADaM in R Asset Library - Extension","text":"package currently development stage.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"ADaM in R Asset Library - Extension","text":"Build toolbox re-usable functions utilities create vaccine-specific ADaM datasets R modular manner. functions created based upon ADaM Implementation Guide aim facilitate programming ADaM dataset standards. Initially package focus creating reactogenecity immunogenecity domain following flat model per CBER guidelines.future make enhancements get updates CBER.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"ADaM in R Asset Library - Extension","text":"admiralvaccine expected complement admiral provide functions help creation efficacy endpoints required vaccine ADaMs.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"references-and-documentation","dir":"","previous_headings":"","what":"References and Documentation","title":"ADaM in R Asset Library - Extension","text":"Please refer {admiral} References Documentation","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"r-versions","dir":"","previous_headings":"","what":"R Versions","title":"ADaM in R Asset Library - Extension","text":"’s summary strategy package related R versions: R versions developers users follow admiral core package. development devel branch admiral core used dependency. releasing new admiralvaccine version must run using latest released admiral core version, .e., main branch admiral core.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"ADaM in R Asset Library - Extension","text":"use following support communications user developer community: Slack - informal discussions, Q&building user community. don’t access, use link join pharmaverse Slack workspace GitHub Issues - direct feedback, enhancement requests raising bugs","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine-package.html","id":null,"dir":"Reference","previous_headings":"","what":"admiralvaccine: ADaM in R Asset Library - Extension — admiralvaccine-package","title":"admiralvaccine: ADaM in R Asset Library - Extension — admiralvaccine-package","text":"toolbox programming Clinical Data Standards Interchange Consortium (CDISC) compliant Analysis Data Model (ADaM) datasets R. ADaM datasets mandatory part New Drug Biologics License Application submitted United States Food Drug Administration (FDA). Analysis derivations implemented accordance \"Analysis Data Model Implementation Guide\" (CDISC Analysis Data Model Team, 2021, https://www.cdisc.org/standards/foundational/adam/adamig-v1-3-release-package).","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"admiralvaccine: ADaM in R Asset Library - Extension — admiralvaccine-package","text":"Maintainer: Open Source admiralext@pharmaverse.com","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine_adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Subject Level Analysis Dataset — admiralvaccine_adsl","title":"Subject Level Analysis Dataset — admiralvaccine_adsl","text":"example subject level analysis dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine_adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subject Level Analysis Dataset — admiralvaccine_adsl","text":"","code":"admiralvaccine_adsl"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine_adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subject Level Analysis Dataset — admiralvaccine_adsl","text":"object class data.frame 3 rows 10 columns.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/admiralvaccine_adsl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subject Level Analysis Dataset — admiralvaccine_adsl","text":"Template adsl dataset associated dm ex datasets","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Subject Level Analysis Dataset — adsl","title":"Subject Level Analysis Dataset — adsl","text":"subject level analysis dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subject Level Analysis Dataset — adsl","text":"","code":"adsl"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subject Level Analysis Dataset — adsl","text":"object class data.frame 1 rows 42 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplemental AE Dataset — ae","title":"Supplemental AE Dataset — ae","text":"SDTM AE dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplemental AE Dataset — ae","text":"","code":"ae"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supplemental AE Dataset — ae","text":"object class tbl_df (inherits tbl, data.frame) 1 rows 16 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ce.html","id":null,"dir":"Reference","previous_headings":"","what":"CE Dataset — ce","title":"CE Dataset — ce","text":"SDTM CE dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CE Dataset — ce","text":"","code":"ce"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CE Dataset — ce","text":"object class tbl_df (inherits tbl, data.frame) 20 rows 31 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Severity Records from Diameters — derive_param_diam_to_sev","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"derive severity records diameter records per subject per event per period.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"","code":"derive_param_diam_to_sev(   dataset = NULL,   filter_diam = \"DIAMETER\",   filter_faobj = c(\"REDNESS\", \"SWELLING\"),   testcd_sev = \"SEV\",   test_sev = \"Severity/Intensity\",   none = c(0, 2),   mild = c(2, 5),   mod = c(5, 10),   sev = 10 )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"dataset Input data set variables USUBJID, APTPTREF, FAOBJ, FASCAT,AVAL, AVALC, FAOBJ, FATESTCD FATEST expected Input data set.(data set) filter_diam Diameter record filter Default: \"DIAMETER\" Permitted Value: character scalar. Helps filter diameter records derive severity records passing FATESTCD value diameter  corresponding specified events filter_faobj. filter_faobj Event filter Default: c(\"REDNESS\",\"SWELLING\") Permitted Value: character vector Scalar. Helps filter events (Redness swelling) diameter records derive severity records passing events FAOBJ. testcd_sev FATESTCDvalue severity Default: \"SEV\" Permitted Value: Character scalar Assign value FATESTCD variable indicate severity records. Ignore argument want set default value. Note: argument value used check whether input data set Severity records specified filter_faobj event. , records removed new severity records derived diameters. test_sev FATEST value severity Default: \"Severity\" Permitted Value: Character scalar Assign value FATEST variable indicate severity records. Ignore argument want set default value. Assign Severity limits create Severity grade(AVALC) none limit grade \"NONE\" Default: c(0,2) Permitted value: Numeric vector none following arguments(mild, mode sev ) used assigning diameter limits derive AVALC(severity grade). Note: Use limit reference pass values argument Since condition coded like , NONE : none < AVAL <= none MILD : mild < AVAL <= mild MODERATE: mod < AVAL <= mod SEVERE: sev > AVAL User pass values numeric vectors. Refer default values. mild limit grade \"MILD\" Default: c(2,5) Permitted value: Numeric vector mod limit grade \"MODERATE\" Default: c(5,10) Permitted value: Numeric vector sev limit grade \"SEVERE\" Default: 10 Permitted value: Numeric vector","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"Input data new severity records Redness swelling specified filter_faobj AVAL, AVALC derived fatestcd, fatest changed per values","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"Pass Input data set dataset required variables AVAL diameter values events(FAOBJ) specified filter_faobj. SDTM data set severity record redness swelling, User can skip function keep SDTM level severity records derivation. User want derive severity records diameter records even data set severity records Redness swelling. function remove existing severity records create new severity records asAVALC derived diameter. AVAL derived numeric severity grade get maximum severity records derived derive_param_maxsev.R. Pass values severity grade arguments(none, mild, mod, sev) per study needs. 5.User can pass events diameter values derive severity records passing appropriate filter_diam, filter_faobjand severity grade limits.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_diam_to_sev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating Severity Records from Diameters — derive_param_diam_to_sev","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(admiral) library(tibble)  input <- tribble(   ~USUBJID, ~FAOBJ, ~AVAL, ~AVALC, ~ATPTREF, ~FATEST, ~FATESTCD,   \"XYZ1001\", \"REDNESS\", 7.5, \"7.5\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"REDNESS\", 3.5, \"3.5\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"REDNESS\", 2, \"2\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"REDNESS\", 1.8, \"1.8\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"REDNESS\", 1.4, \"1.4\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"REDNESS\", 11.1, \"11.1\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"REDNESS\", 7.4, \"7.4\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"REDNESS\", 6, \"6\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"REDNESS\", 2.1, \"2.1\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"REDNESS\", 1.1, \"1.1\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"SWELLING\", 5.5, \"5.5\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"SWELLING\", 2.5, \"2.5\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"SWELLING\", 2, \"2\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"SWELLING\", 1.8, \"1.8\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1001\", \"SWELLING\", 1.4, \"1.4\", \"VACCINATION 1\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"SWELLING\", 10.1, \"10.1\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"SWELLING\", 7.1, \"7.1\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"SWELLING\", 5, \"5\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"SWELLING\", 1.8, \"1.8\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\",   \"XYZ1002\", \"SWELLING\", 1.4, \"1.4\", \"VACCINATION 2\", \"Diameter\", \"DIAMETER\" )  derive_param_diam_to_sev(   dataset = input,   filter_faobj = c(\"REDENSS\", \"SWELLING\"),   filter_diam = \"DIAMETER\",   testcd_sev = \"SEV\",   test_sev = \"Severity\" ) #>    USUBJID    FAOBJ AVAL    AVALC       ATPTREF   FATEST FATESTCD   DTYPE FASEQ #> 1  XYZ1001 SWELLING  2.0 MODERATE VACCINATION 1 Severity      SEV DERIVED    NA #> 2  XYZ1001 SWELLING  1.0     MILD VACCINATION 1 Severity      SEV DERIVED    NA #> 3  XYZ1001 SWELLING  0.0     NONE VACCINATION 1 Severity      SEV DERIVED    NA #> 4  XYZ1001 SWELLING  0.0     NONE VACCINATION 1 Severity      SEV DERIVED    NA #> 5  XYZ1001 SWELLING  0.0     NONE VACCINATION 1 Severity      SEV DERIVED    NA #> 6  XYZ1002 SWELLING  3.0   SEVERE VACCINATION 2 Severity      SEV DERIVED    NA #> 7  XYZ1002 SWELLING  2.0 MODERATE VACCINATION 2 Severity      SEV DERIVED    NA #> 8  XYZ1002 SWELLING  1.0     MILD VACCINATION 2 Severity      SEV DERIVED    NA #> 9  XYZ1002 SWELLING  0.0     NONE VACCINATION 2 Severity      SEV DERIVED    NA #> 10 XYZ1002 SWELLING  0.0     NONE VACCINATION 2 Severity      SEV DERIVED    NA #> 11 XYZ1001  REDNESS  7.5      7.5 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 12 XYZ1001  REDNESS  3.5      3.5 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 13 XYZ1001  REDNESS  2.0        2 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 14 XYZ1001  REDNESS  1.8      1.8 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 15 XYZ1001  REDNESS  1.4      1.4 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 16 XYZ1002  REDNESS 11.1     11.1 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 17 XYZ1002  REDNESS  7.4      7.4 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 18 XYZ1002  REDNESS  6.0        6 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 19 XYZ1002  REDNESS  2.1      2.1 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 20 XYZ1002  REDNESS  1.1      1.1 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 21 XYZ1001 SWELLING  5.5      5.5 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 22 XYZ1001 SWELLING  2.5      2.5 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 23 XYZ1001 SWELLING  2.0        2 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 24 XYZ1001 SWELLING  1.8      1.8 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 25 XYZ1001 SWELLING  1.4      1.4 VACCINATION 1 Diameter DIAMETER    <NA>    NA #> 26 XYZ1002 SWELLING 10.1     10.1 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 27 XYZ1002 SWELLING  7.1      7.1 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 28 XYZ1002 SWELLING  5.0        5 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 29 XYZ1002 SWELLING  1.8      1.8 VACCINATION 2 Diameter DIAMETER    <NA>    NA #> 30 XYZ1002 SWELLING  1.4      1.4 VACCINATION 2 Diameter DIAMETER    <NA>    NA"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating FEVER records — derive_param_fever_occur","title":"Creating FEVER records — derive_param_fever_occur","text":"Getting FAOBJ = \"FEVER\" FATESTCD = \"OCCUR\" records SDTM.VS dataset, FEVER records input dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating FEVER records — derive_param_fever_occur","text":"","code":"derive_param_fever_occur(dataset, source_data, faobj)"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating FEVER records — derive_param_fever_occur","text":"dataset Input dataset Input dataset expected variables USUBJID,FAOBJ, FACAT,FATESTCD FATEST source_data Input SDTM dataset(VS) Input SDTM dataset expected VSCAT = \"REACTOGENICITY\" & VSTESTCD = \"TEMP\"records Default: \"VS\" faobj FAOBJ Value FEVER records output dataset Default: \"FEVER\"","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating FEVER records — derive_param_fever_occur","text":"output dataset contains records FATESTCD = \"OCCUR\"FAOBJ = FEVER records.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creating FEVER records — derive_param_fever_occur","text":"Check FAOBJ = FEVER record present input dataset, use SDTM.VS get FEVER records. temperature values VSSTRESN decide FEVER occurred (FAORRES = \"Y\"/\"N\"). Since records derived, FEVER records considered DTYPE = \"DERIVED\" FAOBJ = FEVER record present, input dataset made output analysis.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creating FEVER records — derive_param_fever_occur","text":"Dhivya Kanagaraj","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_fever_occur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating FEVER records — derive_param_fever_occur","text":"","code":"library(tibble) library(dplyr) library(admiraldev) #>  #> Attaching package: ‘admiraldev’ #> The following objects are masked from ‘package:dplyr’: #>  #>     anti_join, filter_if, inner_join, left_join library(admiral)  input <- tribble(   ~USUBJID, ~FAOBJ, ~FATESTCD, ~FACAT, ~FASCAT, ~FATPT,   \"ABC101\", \"REDNESS\", \"SEV\", \"REACTOGENICITY\", \"ADMINISTRATIVE SITE\", \"DAY 1\",   \"ABC101\", \"REDNESS\", \"DIAM\", \"REACTOGENICITY\", \"ADMINISTRATIVE SITE\", \"DAY 2\",   \"ABC101\", \"VOMITTING\", \"SEV\", \"REACTOGENICITY\", \"SYSTEMIC\", \"DAY 1\",   \"ABC101\", \"FATIQUE\", \"OCCUR\", \"REACTOGENICITY\", \"SYSTEMIC\", \"DAY 3\" )  vs <- tribble(   ~USUBJID, ~VSTESTCD, ~VSCAT, ~VSSTRESN, ~VSSTRESU, ~VSTPT,   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 38.3, \"C\", \"DAY 1\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 38, \"C\", \"DAY 2\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 36, \"C\", \"DAY 3\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 37, \"C\", \"DAY 4\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 39, \"C\", \"DAY 5\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 39, \"C\", \"DAY 6\",   \"ABC101\", \"TEMP\", \"REACTOGENICITY\", 38, \"C\", \"DAY 7\" )  derive_param_fever_occur(   dataset = input,   source_data = vs,   faobj = \"FEVER\" ) #> # A tibble: 11 x 13 #>    USUBJID FAOBJ  FATESTCD FACAT  FASCAT FATPT VSTESTCD VSSTRESN VSSTRESU FATEST #>    <chr>   <chr>  <chr>    <chr>  <chr>  <chr> <chr>       <dbl> <chr>    <chr>  #>  1 ABC101  REDNE… SEV      REACT… ADMIN… DAY 1 NA           NA   NA       NA     #>  2 ABC101  REDNE… DIAM     REACT… ADMIN… DAY 2 NA           NA   NA       NA     #>  3 ABC101  VOMIT… SEV      REACT… SYSTE… DAY 1 NA           NA   NA       NA     #>  4 ABC101  FATIQ… OCCUR    REACT… SYSTE… DAY 3 NA           NA   NA       NA     #>  5 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 1 TEMP         38.3 C        Occur… #>  6 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 2 TEMP         38   C        Occur… #>  7 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 3 TEMP         36   C        Occur… #>  8 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 4 TEMP         37   C        Occur… #>  9 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 5 TEMP         39   C        Occur… #> 10 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 6 TEMP         39   C        Occur… #> 11 ABC101  FEVER  OCCUR    REACT… SYSTE… DAY 7 TEMP         38   C        Occur… #> # … with 3 more variables: FAORRES <chr>, FASTRESC <chr>, DTYPE <chr>"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"Creates maximum diameter record per subject per event per period. Maximum diameter records derived Administration systemic events diameter records.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"","code":"derive_param_maxdiam(   dataset,   filter = NULL,   by_vars = NULL,   test_maxdiam = \"Maximum Diameter\",   testcd_maxdiam = \"MAXDIAM\" )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"dataset Input dataset variables USUBJID, APTPTREF, FAOBJ, FASCAT, AVAL, FATESTCD FATEST required input data set.(dataset) filter Filter condition specified condition applied input dataset deriving new parameter, .e., observations fulfilling condition taken account. FATESTCD FAOBJ related diameter records expected filtered step by_vars Grouping variables Default: exprs(USUBJID, FAOBJ, ATPTREF) Variables consider generation groupwise maximum diameter records. Providing names variables exprs() create groupwise summary generate maximum diam records specified groups. test_maxdiam Value FATEST Default: \"Maximum Diameter\" Permitted Value: Character scalar Pass value FATEST indicate maximum diameter records testcd_maxdiam Value FATESTCD Default: \"MAXDIAM\" Permitted Value: Character scalar Pass value FATESTCD indicate maximum diameter records.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"data frame derived records maximum diameter appended original dataset.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"maximum aval value diameter within group filtered. one record maximum values within group function take first record group.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"Vikram S","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxdiam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds records for the maximum diameter values within each by group to the\noutput dataset. — derive_param_maxdiam","text":"","code":"library(tibble) library(admiral) library(dplyr) library(rlang) #>  #> Attaching package: ‘rlang’ #> The following object is masked from ‘package:admiraldev’: #>  #>     is_named  input <- tribble(   ~USUBJID, ~FAOBJ, ~ATPTREF, ~AVAL, ~AVALC, ~FATEST, ~FATESTCD, ~FASCAT,   \"1\", \"REDNESS\", \"VAC1\", 3.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"1\", \"REDNESS\", \"VAC1\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"1\", \"REDNESS\", \"VAC1\", 1.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"1\", \"REDNESS\", \"VAC2\", 3.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"1\", \"REDNESS\", \"VAC2\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"1\", \"REDNESS\", \"VAC2\", 1.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC1\", 3.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC1\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC1\", 1.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC2\", .5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC2\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\",   \"2\", \"SWELLING\", \"VAC2\", 1.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\" )  # Derive maximum diameter records for redness and swelling.  derive_param_maxdiam(   dataset = input,   filter = FAOBJ %in% c(\"REDNESS\", \"SWELLING\") & FATESTCD == \"DIAMETER\",   by_vars = exprs(USUBJID, FAOBJ, ATPTREF),   test_maxdiam = \"Maximum Diameter\",   testcd_maxdiam = \"MAXDIAM\" ) #> # A tibble: 16 x 9 #>    USUBJID FAOBJ    ATPTREF  AVAL AVALC FATEST         FATESTCD FASCAT    DTYPE  #>    <chr>   <chr>    <chr>   <dbl> <chr> <chr>          <chr>    <chr>     <chr>  #>  1 1       REDNESS  VAC1      3.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #>  2 1       REDNESS  VAC1      4.5 4.5   Diameter       DIAMETER ADMIN-SI… NA     #>  3 1       REDNESS  VAC1      1.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #>  4 1       REDNESS  VAC2      3.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #>  5 1       REDNESS  VAC2      4.5 4.5   Diameter       DIAMETER ADMIN-SI… NA     #>  6 1       REDNESS  VAC2      1.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #>  7 2       SWELLING VAC1      3.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #>  8 2       SWELLING VAC1      4.5 4.5   Diameter       DIAMETER ADMIN-SI… NA     #>  9 2       SWELLING VAC1      1.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #> 10 2       SWELLING VAC2      0.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #> 11 2       SWELLING VAC2      4.5 4.5   Diameter       DIAMETER ADMIN-SI… NA     #> 12 2       SWELLING VAC2      1.5 3.5   Diameter       DIAMETER ADMIN-SI… NA     #> 13 1       REDNESS  VAC1      4.5 NA    Maximum Diame… MAXDIAM  ADMIN-SI… MAXIM… #> 14 1       REDNESS  VAC2      4.5 NA    Maximum Diame… MAXDIAM  ADMIN-SI… MAXIM… #> 15 2       SWELLING VAC1      4.5 NA    Maximum Diame… MAXDIAM  ADMIN-SI… MAXIM… #> 16 2       SWELLING VAC2      4.5 NA    Maximum Diame… MAXDIAM  ADMIN-SI… MAXIM…"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Maximum Severity Records — derive_param_maxsev","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"Creating maximum severity records per subject per event per period. Maximum severity records derived Administration systemic events severity records FATESTCD = \"SEV\".","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"","code":"derive_param_maxsev(   dataset,   exclude_events = NULL,   filter_sev = \"SEV\",   test_maxsev = \"Maximum Severity\",   testcd_maxsev = \"MAXSEV\",   by_vars = exprs(USUBJID, FAOBJ, ATPTREF) )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"dataset input data set variables USUBJID, APTPTREF, FAOBJ, FASCAT, AVALC, FAOBJ, FATESTCD FATEST required input data set.(dataset) exclude_events exclude events Helps exclude events user want derive maximum severity. Pass event name quotes FAOBJ. Default: NULL Permitted Value: character vector. filter_sev severity record filter Default: \"SEV\" Permitted Value: character scalar filter severity records derive maximum severity passing FATESTCD value severity quotes \"SEV\" argument. test_maxsev FATEST value maximum severity records Default: \"Maximum severity\" Permitted Value: character scalar Assign value FATEST variable indicate maximum severity records. Ignore argument want set value mentioned default. testcd_maxsev FATESTCD value maximum severity records Default: \"MAXSEV\" Permitted Value: character scalar Assign value FATESTCD variable indicate maximum severity records. Ignore argument want set value mentioned default. by_vars Grouping variables Default: exprs(USUBJID, FAOBJ, ATPTREF) Based variables passed by_vars argument, maximum severity records derived AVAL. Note: Pass variables exprs().","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"input data set new records FATESTCD = MAXSEVindicating maximum severity records specified variables by_vars. DTYPE populated MAXIMUM. FATESTwill populated specified test_maxsevand FATESCD populated specified testcd_maxsev.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"Arjun Rubalingam","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxsev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating Maximum Severity Records — derive_param_maxsev","text":"","code":"library(tibble) library(admiral) library(dplyr) library(rlang)  input <- tribble(   ~USUBJID, ~FAOBJ, ~AVAL, ~AVALC, ~ATPTREF, ~FATEST, ~FATESTCD, ~FASCAT,   \"XYZ1001\", \"REDNESS\", 1, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 2, \"MODERATE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 2, \"MODERATE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 2, \"MODERATE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 3, \"SEVERE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 2, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 2, \"MODERATE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 1, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 1, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"REDNESS\", 0, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 1, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 1, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 0, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 1, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 0, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 2, \"MODERATE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 1, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 0, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 3, \"SEVERE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1002\", \"REDNESS\", 0, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"ADMIN-SITE\",   \"XYZ1001\", \"CHILLS\", NA, \"MODERATE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"MODERATE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1001\", \"CHILLS\", NA, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"MODERATE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"MILD\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC1\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"MILD\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"MODERATE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\",   \"XYZ1002\", \"CHILLS\", NA, \"NONE\", \"VACC2\", \"Severity\", \"SEV\", \"SYSTEMIC\" )  derive_param_maxsev(   dataset = input,   filter_sev = \"SEV\",   exclude_events = \"REDNESS\",   test_maxsev = \"Maximum severity\",   testcd_maxsev = \"MAXSEV\",   by_vars = exprs(USUBJID, FAOBJ, ATPTREF) ) #>    USUBJID   FAOBJ AVAL    AVALC ATPTREF           FATEST FATESTCD     FASCAT #> 1  XYZ1001 REDNESS    1     MILD   VACC1         Severity      SEV ADMIN-SITE #> 2  XYZ1001 REDNESS    2 MODERATE   VACC1         Severity      SEV ADMIN-SITE #> 3  XYZ1001 REDNESS    2 MODERATE   VACC1         Severity      SEV ADMIN-SITE #> 4  XYZ1001 REDNESS    2 MODERATE   VACC1         Severity      SEV ADMIN-SITE #> 5  XYZ1001 REDNESS    3   SEVERE   VACC1         Severity      SEV ADMIN-SITE #> 6  XYZ1001 REDNESS    1     MILD   VACC2         Severity      SEV ADMIN-SITE #> 7  XYZ1001 REDNESS    2 MODERATE   VACC2         Severity      SEV ADMIN-SITE #> 8  XYZ1001 REDNESS    1     MILD   VACC2         Severity      SEV ADMIN-SITE #> 9  XYZ1001 REDNESS    1     MILD   VACC2         Severity      SEV ADMIN-SITE #> 10 XYZ1001 REDNESS    0     NONE   VACC2         Severity      SEV ADMIN-SITE #> 11 XYZ1002 REDNESS    1     MILD   VACC1         Severity      SEV ADMIN-SITE #> 12 XYZ1002 REDNESS    1     MILD   VACC1         Severity      SEV ADMIN-SITE #> 13 XYZ1002 REDNESS    0     NONE   VACC1         Severity      SEV ADMIN-SITE #> 14 XYZ1002 REDNESS    1     MILD   VACC1         Severity      SEV ADMIN-SITE #> 15 XYZ1002 REDNESS    0     NONE   VACC1         Severity      SEV ADMIN-SITE #> 16 XYZ1002 REDNESS    2 MODERATE   VACC2         Severity      SEV ADMIN-SITE #> 17 XYZ1002 REDNESS    1     MILD   VACC2         Severity      SEV ADMIN-SITE #> 18 XYZ1002 REDNESS    0     NONE   VACC2         Severity      SEV ADMIN-SITE #> 19 XYZ1002 REDNESS    3   SEVERE   VACC2         Severity      SEV ADMIN-SITE #> 20 XYZ1002 REDNESS    0     NONE   VACC2         Severity      SEV ADMIN-SITE #> 21 XYZ1001  CHILLS    2 MODERATE   VACC1         Severity      SEV   SYSTEMIC #> 22 XYZ1001  CHILLS    1     MILD   VACC1         Severity      SEV   SYSTEMIC #> 23 XYZ1001  CHILLS    0     NONE   VACC1         Severity      SEV   SYSTEMIC #> 24 XYZ1001  CHILLS    1     MILD   VACC1         Severity      SEV   SYSTEMIC #> 25 XYZ1001  CHILLS    0     NONE   VACC1         Severity      SEV   SYSTEMIC #> 26 XYZ1001  CHILLS    2 MODERATE   VACC2         Severity      SEV   SYSTEMIC #> 27 XYZ1001  CHILLS    1     MILD   VACC2         Severity      SEV   SYSTEMIC #> 28 XYZ1001  CHILLS    0     NONE   VACC2         Severity      SEV   SYSTEMIC #> 29 XYZ1001  CHILLS    1     MILD   VACC2         Severity      SEV   SYSTEMIC #> 30 XYZ1001  CHILLS    0     NONE   VACC2         Severity      SEV   SYSTEMIC #> 31 XYZ1002  CHILLS    2 MODERATE   VACC1         Severity      SEV   SYSTEMIC #> 32 XYZ1002  CHILLS    1     MILD   VACC1         Severity      SEV   SYSTEMIC #> 33 XYZ1002  CHILLS    0     NONE   VACC1         Severity      SEV   SYSTEMIC #> 34 XYZ1002  CHILLS    0     NONE   VACC1         Severity      SEV   SYSTEMIC #> 35 XYZ1002  CHILLS    0     NONE   VACC1         Severity      SEV   SYSTEMIC #> 36 XYZ1002  CHILLS    1     MILD   VACC2         Severity      SEV   SYSTEMIC #> 37 XYZ1002  CHILLS    0     NONE   VACC2         Severity      SEV   SYSTEMIC #> 38 XYZ1002  CHILLS    0     NONE   VACC2         Severity      SEV   SYSTEMIC #> 39 XYZ1002  CHILLS    2 MODERATE   VACC2         Severity      SEV   SYSTEMIC #> 40 XYZ1002  CHILLS    0     NONE   VACC2         Severity      SEV   SYSTEMIC #> 41 XYZ1001  CHILLS    2 MODERATE   VACC1 Maximum severity   MAXSEV   SYSTEMIC #> 42 XYZ1001  CHILLS    2 MODERATE   VACC2 Maximum severity   MAXSEV   SYSTEMIC #> 43 XYZ1002  CHILLS    2 MODERATE   VACC1 Maximum severity   MAXSEV   SYSTEMIC #> 44 XYZ1002  CHILLS    2 MODERATE   VACC2 Maximum severity   MAXSEV   SYSTEMIC #>      DTYPE #> 1     <NA> #> 2     <NA> #> 3     <NA> #> 4     <NA> #> 5     <NA> #> 6     <NA> #> 7     <NA> #> 8     <NA> #> 9     <NA> #> 10    <NA> #> 11    <NA> #> 12    <NA> #> 13    <NA> #> 14    <NA> #> 15    <NA> #> 16    <NA> #> 17    <NA> #> 18    <NA> #> 19    <NA> #> 20    <NA> #> 21    <NA> #> 22    <NA> #> 23    <NA> #> 24    <NA> #> 25    <NA> #> 26    <NA> #> 27    <NA> #> 28    <NA> #> 29    <NA> #> 30    <NA> #> 31    <NA> #> 32    <NA> #> 33    <NA> #> 34    <NA> #> 35    <NA> #> 36    <NA> #> 37    <NA> #> 38    <NA> #> 39    <NA> #> 40    <NA> #> 41 MAXIMUM #> 42 MAXIMUM #> 43 MAXIMUM #> 44 MAXIMUM"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxtemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Deriving maximum temperature record — derive_param_maxtemp","title":"Deriving maximum temperature record — derive_param_maxtemp","text":"Create summary record maximum temperature per subject per period.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxtemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deriving maximum temperature record — derive_param_maxtemp","text":"","code":"derive_param_maxtemp(   dataset = NULL,   filter_faobj = \"FEVER\",   by_vars = exprs(USUBJID, FAOBJ, ATPTREF),   test_maxtemp = \"Maximum temperatue\",   testcd_maxtemp = \"MAXTEMP\" )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxtemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deriving maximum temperature record — derive_param_maxtemp","text":"dataset Input data set Input data set temperature record derived using function derive_param_fever_occur. filter_faobj filter fever record Default: \"FEVER\" Permitted Value: Character Scalar Helps filter fever record passing value FATESTCD indicates fever records. by_vars Grouping variables Default: vars(USUBJID,FAOBJ,ATPTREF) Permitted Value: Character vector Pass by_vars vars() based by_vars variables maximum temperature derived VSSTRESN. test_maxtemp Value FATEST Default: \"Maximum temperature\" Permitted Value: Character scalar Pass value FATEST indicate maximum temperature records testcd_maxtemp Default: \"MAXTEMP\" Permitted Value: Character scalar Pass value FATESTCD indicate maximum temperature records. refer default value.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxtemp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deriving maximum temperature record — derive_param_maxtemp","text":"input data set derived records indicating maximum temperature records.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_param_maxtemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deriving maximum temperature record — derive_param_maxtemp","text":"","code":"library(tibble) library(admiral) library(dplyr) library(rlang)  input <- tribble(   ~USUBJID, ~FAOBJ, ~ATPTREF, ~AVALC, ~ATPTN, ~VSSTRESN, ~FATEST, ~FATESTCD,   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"Y\", 1, 38.9, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"Y\", 2, 39.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"Y\", 3, 39.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"Y\", 4, 39.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"N\", 5, 33.1, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 1\", \"Y\", 6, 36.0, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"Y\", 1, 38.9, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"Y\", 2, 37.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"Y\", 3, 37.3, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"Y\", 4, 36.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"N\", 5, 36.1, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1001\", \"FEVER\", \"VACC 2\", \"Y\", 6, 34.0, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"N\", 1, 36.7, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"Y\", 2, 38.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"Y\", 3, 35.5, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"Y\", 4, 38.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"Y\", 5, 37.5, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 1\", \"Y\", 6, 37.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"Y\", 1, 38.0, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"N\", 2, 37.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"N\", 3, 37.4, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"Y\", 4, 38.2, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"N\", 5, 36.1, \"Occurrence Indicator\", \"OCCUR\",   \"XYZ1002\", \"FEVER\", \"VACC 2\", \"N\", 6, 36.2, \"Occurrence Indicator\", \"OCCUR\" )  derive_param_maxtemp(   dataset = input,   filter_faobj = \"FEVER\",   test_maxtemp = \"Maximum Temperature\",   testcd_maxtemp = \"MAXTEMP\",   by_vars = exprs(USUBJID, FAOBJ, ATPTREF) ) #> # A tibble: 28 x 10 #>    USUBJID FAOBJ ATPTREF AVALC ATPTN VSSTRESN FATEST        FATESTCD  AVAL DTYPE #>    <chr>   <chr> <chr>   <chr> <dbl>    <dbl> <chr>         <chr>    <dbl> <chr> #>  1 XYZ1001 FEVER VACC 1  Y         1     38.9 Occurrence I… OCCUR       NA NA    #>  2 XYZ1001 FEVER VACC 1  Y         2     39.2 Occurrence I… OCCUR       NA NA    #>  3 XYZ1001 FEVER VACC 1  Y         3     39.2 Occurrence I… OCCUR       NA NA    #>  4 XYZ1001 FEVER VACC 1  Y         4     39.2 Occurrence I… OCCUR       NA NA    #>  5 XYZ1001 FEVER VACC 1  N         5     33.1 Occurrence I… OCCUR       NA NA    #>  6 XYZ1001 FEVER VACC 1  Y         6     36   Occurrence I… OCCUR       NA NA    #>  7 XYZ1001 FEVER VACC 2  Y         1     38.9 Occurrence I… OCCUR       NA NA    #>  8 XYZ1001 FEVER VACC 2  Y         2     37.2 Occurrence I… OCCUR       NA NA    #>  9 XYZ1001 FEVER VACC 2  Y         3     37.3 Occurrence I… OCCUR       NA NA    #> 10 XYZ1001 FEVER VACC 2  Y         4     36.2 Occurrence I… OCCUR       NA NA    #> # … with 18 more rows"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"Derive analysis criterion evaluation result variable, paired character    + numeric flags.                                                             + ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","code":"+"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"","code":"derive_vars_crit(dataset, new_var, label_var, condition, criterion)"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"dataset Input dataset new_var Variables add analysis criterion evaluation variable's name (.e., CRIT1) name also used order create character numeric flags variables (.e., CRIT1FL CRIT1FN). possible give different name, base needs (.e., ANL01) label_var Criterion value text description defining condition necessary satisfy presence criterion condition Condition selecting subset condition specified order select subset input dataset rule applied. criterion Criterion rule criterion selected row satisfies . Returns Y N character variable 1 0 fro numeric variable criterion met , respectively. Returns NA selected rows (taken account condition)","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"dataset criterion variables","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"Federico Baratin","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_crit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive Analysis Criterion Evaluation variables — derive_vars_crit","text":"","code":"library(tibble) library(admiral) library(admiraldev) library(dplyr) library(rlang)  input <- tribble(   ~USUBJID, ~AVISITN, ~ISCAT, ~PARAMCD, ~AVAL, ~ISLLOQ,   \"999999-000001\", 10, \"IMMUNOLOGY\", \"J0033VN\", 2, 4,   \"999999-000001\", 10, \"IMMUNOLOGY\", \"I0019NT\", 3, 6,   \"999999-000001\", 10, \"IMMUNOLOGY\", \"M0019LN\", 4, 4,   \"999999-000001\", 10, \"IMMUNOLOGY\", \"R0003MA\", 3, 6,   \"999999-000001\", 30, \"IMMUNOLOGY\", \"J0033VN\", 60, 4,   \"999999-000001\", 30, \"IMMUNOLOGY\", \"I0019NT\", 567, 6,   \"999999-000001\", 30, \"IMMUNOLOGY\", \"M0019LN\", 659, 4,   \"999999-000001\", 30, \"IMMUNOLOGY\", \"R0003MA\", 250, 6,   \"999999-000002\", 10, \"IMMUNOLOGY\", \"J0033VN\", 2, 4,   \"999999-000002\", 10, \"IMMUNOLOGY\", \"I0019NT\", 7, 6,   \"999999-000002\", 10, \"IMMUNOLOGY\", \"M0019LN\", 5, 4,   \"999999-000002\", 10, \"IMMUNOLOGY\", \"R0003MA\", 3, 6,   \"999999-000002\", 30, \"IMMUNOLOGY\", \"J0033VN\", 55, 4,   \"999999-000002\", 30, \"IMMUNOLOGY\", \"I0019NT\", 89, 6,   \"999999-000002\", 30, \"IMMUNOLOGY\", \"M0019LN\", 990, 4,   \"999999-000002\", 30, \"IMMUNOLOGY\", \"R0003MA\", 340, 6,   \"999999-000003\", 10, \"IMMUNOLOGY\", \"J0033VN\", 3, 4,   \"999999-000003\", 10, \"IMMUNOLOGY\", \"I0019NT\", 6, 6,   \"999999-000003\", 10, \"IMMUNOLOGY\", \"M0019LN\", 2, 4,   \"999999-000003\", 10, \"IMMUNOLOGY\", \"R0003MA\", 2, 6,   \"999999-000003\", 30, \"IMMUNOLOGY\", \"J0033VN\", 45, 4,   \"999999-000003\", 30, \"IMMUNOLOGY\", \"I0019NT\", 381, 6,   \"999999-000003\", 30, \"IMMUNOLOGY\", \"M0019LN\", 542, 4,   \"999999-000003\", 30, \"IMMUNOLOGY\", \"R0003MA\", NA, 6 )   output <- derive_vars_crit(   dataset = input,   new_var = \"CRIT1\",   label_var = \"Titer >= ISLLOQ\",   condition = !is.na(AVAL) & !is.na(ISLLOQ),   criterion = AVAL >= ISLLOQ )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"Creates two flag variables event occurred,one event occurred within group one flag event occurred day.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"","code":"derive_vars_event_flag(   dataset,   by_vars,   aval_cutoff,   new_var1 = NULL,   new_var2 = NULL )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"dataset Input dataset variables specified by_vars argument expected. by_vars Grouping variables   variables considered grouping creating new variable new_var1 aval_cutoff Cutoff value cutoff value decide whether consider event occurred TESTCD based diameter. example, diameter value greater x consider event occurred record otherwise considered event happened record. new_var1 Name new flag variable 1   new_var2 Name new flag variable 2.","code":"*Permitted values:* list of variables created by `exprs()` A new flag variable will be created with values \"Y\" or \"N\". If the event is occurred at least once during a observation period for a subject then the new variable will be flagged as Y otherwise N. A new flag variable will be created with values \"Y\" or \"N\". If the event is occurred on the particular day then the new variable will be flagged as Y otherwise N."},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"dataset flag variables added .","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"names new flag variables created sponsor specific. new_var1 flag observations \"Y\" within group event occurred least observation period. event occurred observation period observations within group flagged \"N\". derived records DTYPE equals \"MAXIMUM\" , new_var2 set NA.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_event_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds Flag Variables for an Occurred Event . — derive_vars_event_flag","text":"","code":"library(tibble) library(admiral) library(dplyr) library(rlang)  input <- tribble(   ~USUBJID, ~FAOBJ, ~ATPTREF, ~AVAL, ~AVALC, ~FATEST, ~FATESTCD, ~FASCAT, ~DTYPE,   \"1\", \"REDNESS\", \"VAC1\", 3.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC1\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC1\", 1.5, \"3.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC1\", 4.5, \"4.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"MAXIMUM\",   \"1\", \"FATIGUE\", \"VAC1\", 1, \"MILD\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC1\", 2, \"MODERATE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC1\", 0, \"NONE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC1\", 2, \"MODERATE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"MAXIMUM\",   \"1\", \"REDNESS\", \"VAC2\", 6.5, \"6.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC2\", 7.5, \"7.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC2\", 2.5, \"2.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"\",   \"1\", \"REDNESS\", \"VAC2\", 7.5, \"7.5\", \"Diameter\", \"DIAMETER\", \"ADMIN-SITE\", \"MAXIMUM\",   \"1\", \"FATIGUE\", \"VAC2\", 1, \"MILD\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC2\", 2, \"MODERATE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC2\", 0, \"NONE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"\",   \"1\", \"FATIGUE\", \"VAC2\", 2, \"MODERATE\", \"Severity\", \"SEV\", \"SYSTEMIC\", \"MAXIMUM\", )  derive_vars_event_flag(   dataset = input,   by_vars = exprs(USUBJID, FAOBJ, ATPTREF),   aval_cutoff = 2.5,   new_var1 = EVENTL,   new_var2 = EVENTDL )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Maximum flags — derive_vars_max_flag","title":"Creating Maximum flags — derive_vars_max_flag","text":"Adds Flags variables maximum record per subject per event overall per vaccination","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Maximum flags — derive_vars_max_flag","text":"","code":"derive_vars_max_flag(dataset, flag1 = \"ANL01FL\", flag2 = \"ANL02FL\")"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Maximum flags — derive_vars_max_flag","text":"dataset Input dataset flag1 Flags maximum record per subject per event per Vaccination Default: \"ANL01FL\" Permitted value: variable name NULL NULL denotes create flag flag2 Flags maximum record per subject per event Overall Default: \"ANL02FL\" Permitted value: variable name NULL NULL denotes create flag","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Maximum flags — derive_vars_max_flag","text":"output dataset creates ANLxxFL flags","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creating Maximum flags — derive_vars_max_flag","text":"utility flags maximum record per subject per event per vaccination/Overall parameters flag1 & flag2 passed NULL utility throw error flags created.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creating Maximum flags — derive_vars_max_flag","text":"Dhivya Kanagaraj","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_max_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating Maximum flags — derive_vars_max_flag","text":"","code":"library(dplyr) library(admiraldev) library(admiral) library(tibble) input <- tribble(   ~USUBJID, ~FAOBJ, ~FATESTCD, ~FATPTREF, ~AVAL, ~FADTC, ~PARAMCD,   \"ABC101\", \"REDNESS\", \"DIAMETER\", \"VACC 1\", 10, \"2015-01-10\", \"DIARE\",   \"ABC101\", \"REDNESS\", \"DIAMETER\", \"VACC 1\", 7, \"2015-01-11\", \"DIARE\",   \"ABC101\", \"REDNESS\", \"DIAMETER\", \"VACC 2\", 3, \"2015-02-10\", \"DIARE\",   \"ABC101\", \"REDNESS\", \"DIAMETER\", \"VACC 2\", 8, \"2015-02-11\", \"DIARE\",   \"ABC101\", \"FATIQUE\", \"SEV\", \"VACC 1\", 1, \"2015-01-10\", \"SEVFAT\",   \"ABC101\", \"FATIQUE\", \"SEV\", \"VACC 1\", 1, \"2015-01-11\", \"SEVFAT\",   \"ABC101\", \"FATIQUE\", \"SEV\", \"VACC 2\", 2, \"2015-02-10\", \"SEVFAT\",   \"ABC101\", \"FATIQUE\", \"SEV\", \"VACC 2\", 3, \"2015-02-11\", \"SEVFAT\" )  derive_vars_max_flag(   dataset = input,   flag1 = \"ANL01FL\",   flag2 = \"ANL02FL\" ) derive_vars_max_flag(   dataset = input,   flag1 = NULL,   flag2 = \"ANL02FL\" ) derive_vars_max_flag(   dataset = input,   flag1 = \"ANL01FL\",   flag2 = NULL )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":null,"dir":"Reference","previous_headings":"","what":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"Add New Variable(s) Input dataset Based Variables Another dataset. variables added output dataset based input variables passed ex_vars argument","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"","code":"derive_vars_merged_vaccine(   dataset,   dataset_ex,   dataset_supp = NULL,   dataset_suppex = NULL,   ex_vars )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"dataset Input dataset variables specified by_vars argument inside derive_vars_mergedare expected. dataset_ex EX dataset merge input dataset. variables specified ex_vars argument expected. dataset_supp Supplementary input dataset default dataset_supp NULL,user provide supplementary dataset merge back original input dataset supplementary dataset case. dataset_suppex Supplementary EX dataset default dataset_suppex NULL,user provide supplementary dataset merge back original EX dataset supplementary dataset case. ex_vars Variables added output dataset EX dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"dataset variables added EX dataset.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"input dataset merged Ex dataset \"ADMINISTRATION SITE\" \"SYSTEMIC\" categories separately datasets binded together final output dataset. grouping variables defaulted within function . variables passed ex_vars present output dataset input dataset multiple vaccination subject visit function merge ex dataset return input dataset merged supplementary dataset.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"Vikram S","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_merged_vaccine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add New Variable(s) to the Input dataset Based on Variables from Another dataset — derive_vars_merged_vaccine","text":"","code":"derive_vars_merged_vaccine(   dataset = face,   dataset_ex = ex,   dataset_supp = NULL,   dataset_suppex = NULL,   ex_vars = exprs(EXTRT, EXDOSE, EXDOSEU, EXSTDTC, EXENDTC) ) #> Warning: Subjects have multiple vaccinations at same visit"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigning Parameter variables — derive_vars_params","title":"Assigning Parameter variables — derive_vars_params","text":"Creating PARAMCD lookup file assigning PARAM,PARAMN,PARCAT1, PARCAT2 variables","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigning Parameter variables — derive_vars_params","text":"","code":"derive_vars_params(dataset, lookup_dataset)"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigning Parameter variables — derive_vars_params","text":"dataset Input dataset Input dataset expected variables USUBJID,FAOBJ, FACAT, FATESTCD FATEST lookup_dataset lookup file containing PARAMCD values every unique FATESTCD FAOBJ lookup file expected variables FATEST, PARAMCD, FATESTCD, FAOBJ one entry every unique FATESTCD FAOBJ","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigning Parameter variables — derive_vars_params","text":"output dataset contains observations variables input dataset along PARAM,PARAMCD,PARCAT1,PARCAT2,PARAMN","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assigning Parameter variables — derive_vars_params","text":"lookup file required PARAMCD values every combination FATEST & FAOBJ. PARAMCD values comes lookup file. PARAMN assigned unique number every unique PARAM value. PARAM value combination FAOBJ FATEST FASTRESU FALOC FADIR FALAT","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assigning Parameter variables — derive_vars_params","text":"Dhivya Kanagaraj","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assigning Parameter variables — derive_vars_params","text":"","code":"library(tibble) lookup_dataset <- tribble(   ~FATESTCD,    ~PARAMCD,    ~FATEST,                ~FAOBJ,   \"SEV\",        \"SEVREDN\",   \"Severity\",             \"Redness\",   \"DIAMETER\",   \"DIARE\",     \"Diameter\",             \"Redness\",   \"MAXDIAM\",    \"MDIRE\",     \"Maximum Diameter cm\",  \"Redness\",   \"MAXTEMP\",    \"MAXTEMP\",   \"Maximum Temperature\",  \"Fever\",   \"OCCUR\",      \"OCFEVER\",   \"Occurrence Indicator\", \"Fever\",   \"OCCUR\",      \"OCERYTH\",   \"Occurrence Indicator\", \"Erythema\",   \"SEV\",        \"SEVPAIN\",   \"Severity\",             \"Pain at Injection site\",   \"OCCUR\",      \"OCPAIN\",    \"Occurrence Indicator\", \"Pain at Injection site\",   \"OCCUR\",      \"OCSWEL\",    \"Occurrence Indicator\", \"Swelling\" )  input <- tribble(   ~USUBJID, ~FACAT, ~FASCAT, ~FATESTCD, ~FAOBJ, ~FATEST, ~FALOC, ~FALAT,   \"ABC101\", \"REACTO\", \"ADMIN\", \"SEV\", \"Redness\", \"Severity\", \"ARM\", \"LEFT\",   \"ABC101\", \"REACTO\", \"ADMIN\", \"DIAMETER\", \"Redness\", \"Diameter\", \"ARM\", \"RIGHT\",   \"ABC101\", \"REACTO\", \"ADMIN\", \"MAXDIAM\", \"Redness\", \"Maximum Diameter\", NA, NA,   \"ABC101\", \"REACTO\", \"SYSTEMIC\", \"MAXTEMP\", \"Fever\", \"Maximum Temp\", NA, NA,   \"ABC101\", \"REACTO\", \"SYSTEMIC\", \"OCCUR\", \"Fever\", \"Occurrence\", NA, NA,   \"ABC101\", \"REACTO\", \"ADMIN\", \"OCCUR\", \"Erythema\", \"Occurrence\", NA, NA,   \"ABC101\", \"REACTO\", \"ADMIN\", \"SEV\", \"Swelling\", \"Severity\", NA, NA,   \"ABC101\", \"REACTO\", \"ADMIN\", \"OCCUR\", \"Swelling\", \"Occurrence\", NA, NA,   \"ABC101\", \"REACTO\", \"ADMIN\", \"OCCUR\", \"Swelling\", \"Occurrence\", NA, NA ) derive_vars_params(   dataset = input,   lookup_dataset = lookup_dataset ) #>                        PARAM USUBJID  FACAT   FASCAT FATESTCD    FAOBJ #> 1        Erythema occurrence  ABC101 REACTO    ADMIN    OCCUR Erythema #> 2         Fever maximum temp  ABC101 REACTO SYSTEMIC  MAXTEMP    Fever #> 3           Fever occurrence  ABC101 REACTO SYSTEMIC    OCCUR    Fever #> 4 Redness diameter arm right  ABC101 REACTO    ADMIN DIAMETER  Redness #> 5   Redness maximum diameter  ABC101 REACTO    ADMIN  MAXDIAM  Redness #> 6  Redness severity arm left  ABC101 REACTO    ADMIN      SEV  Redness #> 7        Swelling occurrence  ABC101 REACTO    ADMIN    OCCUR Swelling #> 8        Swelling occurrence  ABC101 REACTO    ADMIN    OCCUR Swelling #> 9          Swelling severity  ABC101 REACTO    ADMIN      SEV Swelling #>             FATEST FALOC FALAT PARAMCD PARCAT1  PARCAT2 PARAMN #> 1       Occurrence  <NA>  <NA> OCERYTH  REACTO    ADMIN      6 #> 2     Maximum Temp  <NA>  <NA> MAXTEMP  REACTO SYSTEMIC      4 #> 3       Occurrence  <NA>  <NA> OCFEVER  REACTO SYSTEMIC      5 #> 4         Diameter   ARM RIGHT   DIARE  REACTO    ADMIN      2 #> 5 Maximum Diameter  <NA>  <NA>   MDIRE  REACTO    ADMIN      3 #> 6         Severity   ARM  LEFT SEVREDN  REACTO    ADMIN      1 #> 7       Occurrence  <NA>  <NA>  OCSWEL  REACTO    ADMIN      8 #> 8       Occurrence  <NA>  <NA>  OCSWEL  REACTO    ADMIN      8 #> 9         Severity  <NA>  <NA>    <NA>  REACTO    ADMIN      7"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"Creates vaccination date variables ex domain.date variable created vaccination taking values variable EXSTDTC.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"","code":"derive_vars_vaxdt(dataset, dataset_adsl, by_vars, order)"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"dataset Input dataset variables specified by_vars argument expected. dataset_adsl Input adsl dataset vaccination date variables created merged adsl dataset. by_vars Grouping variables. Default: exprs(USUBJID, VISITNUM) variables grouped filter first observation within group. order Sorting variables. Default: exprs(USUBJID,VISITNUM,VISIT,EXSTDTC) variables order specified either ascending descending order. default ascending order applicable.","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"adsl dataset vaccination date variables added .","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"multiple vaccinations visit per subject,first observation filtered based variable order specified order argument. number variables created based number vaccinations per subject per visit.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"Vikram S","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/derive_vars_vaxdt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds vaccination date variables to the output dataset. — derive_vars_vaxdt","text":"","code":"library(tibble) library(admiral) library(dplyr) library(rlang)  input <- tribble(   ~USUBJID, ~EXSTDTC, ~VISITNUM, ~EXTRT, ~EXLNKGRP, ~VISIT,   \"A001\", \"2015-01-10\", 1, \"DRUG A\", \"VAC 1\", \"VISIT 1\",   \"A001\", \"2015-01-11\", 2, \"DRUG A\", \"VAC 2\", \"VISIT 2\",   \"A001\", \"2015-01-12\", 3, \"DRUG B\", \"VAC 3\", \"VISIT 3\",   \"A002\", \"2015-01-13\", 1, \"DRUG B\", \"VAC 1\", \"VISIT 1\",   \"A002\", \"2015-01-14\", 2, \"DRUG C\", \"VAC 2\", \"VISIT 2\" )  adsl <- tribble(   ~USUBJID, ~SEX, ~AGE,   \"ABC001\", \"MALE\", 23,   \"ABC002\", \"FEMALE\", 26, )"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/dm.html","id":null,"dir":"Reference","previous_headings":"","what":"DM Dataset — dm","title":"DM Dataset — dm","text":"SDTM DM dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DM Dataset — dm","text":"","code":"dm"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/dm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DM Dataset — dm","text":"object class data.frame 3 rows 28 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ex.html","id":null,"dir":"Reference","previous_headings":"","what":"EX Dataset — ex","title":"EX Dataset — ex","text":"SDTM EX dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EX Dataset — ex","text":"","code":"ex"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EX Dataset — ex","text":"object class tbl_df (inherits tbl, data.frame) 4 rows 24 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/face.html","id":null,"dir":"Reference","previous_headings":"","what":"FACE Dataset — face","title":"FACE Dataset — face","text":"SDTM FACE dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/face.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FACE Dataset — face","text":"","code":"face"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/face.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FACE Dataset — face","text":"object class tbl_df (inherits tbl, data.frame) 49 rows 29 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive Extension Example — hello_admiral","title":"Derive Extension Example — hello_admiral","text":"Says hello admiral","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = TRUE)"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive Extension Example — hello_admiral","text":"hw TRUE FALSE","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive Extension Example — hello_admiral","text":"Happy Message","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derive Extension Example — hello_admiral","text":"Something Something","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derive Extension Example — hello_admiral","text":"Open Source","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/hello_admiral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = FALSE) #> Welcome to the admiral family!"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/is.html","id":null,"dir":"Reference","previous_headings":"","what":"IS Dataset — is","title":"IS Dataset — is","text":"SDTM dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/is.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IS Dataset — is","text":"","code":"is"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/is.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IS Dataset — is","text":"object class tbl_df (inherits tbl, data.frame) 80 rows 24 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/suppis.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplemental IS Dataset — suppis","title":"Supplemental IS Dataset — suppis","text":"SDTM Supplemental dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/suppis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplemental IS Dataset — suppis","text":"","code":"suppis"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/suppis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supplemental IS Dataset — suppis","text":"object class tbl_df (inherits tbl, data.frame) 80 rows 10 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vs.html","id":null,"dir":"Reference","previous_headings":"","what":"VS Dataset — vs","title":"VS Dataset — vs","text":"SDTM VS dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VS Dataset — vs","text":"","code":"vs"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VS Dataset — vs","text":"object class tbl_df (inherits tbl, data.frame) 6 rows 29 columns.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vx_adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Vx - Subject Level Analysis Dataset — vx_adsl","title":"Vx - Subject Level Analysis Dataset — vx_adsl","text":"subject level analysis dataset","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vx_adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vx - Subject Level Analysis Dataset — vx_adsl","text":"","code":"vx_adsl"},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/reference/vx_adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vx - Subject Level Analysis Dataset — vx_adsl","text":"object class data.frame 10 rows 14 columns.","code":""},{"path":[]},{"path":[]},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"admiralvaccine 0.0.1","text":"Created SDTM dummy data , SUPPIS ADIS (#31, #26)","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/news/index.html","id":"updates-of-existing-functions-0-0-1","dir":"Changelog","previous_headings":"","what":"Updates of Existing Functions","title":"admiralvaccine 0.0.1","text":"Updates made version (#ISSUE-NUMBER)","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/news/index.html","id":"breaking-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"admiralvaccine 0.0.1","text":"Deprecated functions. (#ISSUE-NUMBER) Bug Fixes (#ISSUE-NUMBER)","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/news/index.html","id":"documentation-0-0-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"admiralvaccine 0.0.1","text":"Stuff (#ISSUE-NUMBER)","code":""},{"path":"https://pharmaverse.github.io/admiralvaccine/devel/news/index.html","id":"various-0-0-1","dir":"Changelog","previous_headings":"","what":"Various","title":"admiralvaccine 0.0.1","text":"Stuff (#ISSUE-NUMBER)","code":""}]
